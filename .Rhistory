which(dataphylo$Species %in% select.ind$name)
select.ind$name
p <- p + geom_text_repel(data = custom_points[which(dataphylo$Species %in% select.ind$name),],
aes(x = PC1, y = PC2),
label=dataphylo$Species[which(dataphylo$Species %in% select.ind$name)])
pdf(file = paste0(path_plots, "/outliers_teleo.pdf"), height = 8, width=6.8)
print(p)
dev.off()
p
# beneat marine
# 14/10/24
# PCA of the Teleostei species
path_plots <- paste0(getwd(), "/02-Analysis/Outputs/plots")
load(paste0(getwd(), "/02-Analysis/Outputs/IMAGE_AA_FOR_ANALYSIS.RData"))
source(paste0(getwd(), "/02-Analysis/Scripts/00-Functions_for_analysis.R"))
AXESTOREPRESENT=c(1,2)
# creating the PCA and the data frames associated
PCAtot <- runPCA(dataplot, traits)
plot(PCAtot$x[,1], PCAtot$x[,2])
plot(PCAtot)
res.pca <- PCAtot
# res.pca <- PCA(beta_iv1_tot)
dataacpPLOT <- dataacp_add_colorvector(dataphylo, kclusters=7, dataacp)
listforplot <- preparedataforplot(numbPCA1=1, numbPCA2=2, dataacp=dataacpPLOT, AA=AAtot, PCA=PCAtot)
rotation = listforplot[[1]]
matrixAAinPCA = listforplot[[2]]
dataacpPLOT = listforplot[[3]]
dataacpPLOT = dataacpPLOT[, !duplicated(t(dataacpPLOT))]
eigenval = listforplot[[4]]
# preparing the data for the Archetypes identifications
datatoadd <- matrixAAinPCA[,1:2]
rownames(datatoadd)<- NULL
labels <- c("Periodic", "Equilibrium", "Opportunistic")
datatoadd <- data_frame(x=datatoadd[,1], y=datatoadd[,2], z=labels)
# prepare the data for the arrows indentification
rownames(res.pca$rotation) <- c("Amat", "Amax", "M", "K", "Tlvl", "Hab")
select.ind = list(name = dataphylo$Species[which(dataphylo$Species %in% c(#"Gillichthys seta/mirabilis", removed because tm<tmax or Lm<Loo
"Pseudopleuronectes herzensteini",
"Lipophrys pholis",
"Buglossidium luteum",
"Gilchristella aestuaria",
"Chaenocephalus aceratus",
"Glossogobius kokius",
"Brevoortia tyrannus",
"Mugil cephalus",
"Glossogobius giuris"))])
custom_points <- data.frame(res.pca$x)
plotnames <- dataphylo$Species %>% as.character()
mylabels <- sapply(plotnames, function(x) ifelse(dataphylo$Species %in% select.ind, "", x)) %>% as.vector()
# beneat marine
# 14/10/24
# PCA of the Teleostei species
path_plots <- paste0(getwd(), "/02-Analysis/Outputs/plots")
load(paste0(getwd(), "/02-Analysis/Outputs/IMAGE_AA_FOR_ANALYSIS.RData"))
source(paste0(getwd(), "/02-Analysis/Scripts/00-Functions_for_analysis.R"))
AXESTOREPRESENT=c(1,2)
# creating the PCA and the data frames associated
PCAtot <- runPCA(dataplot, traits)
plot(PCAtot$x[,1], PCAtot$x[,2])
plot(PCAtot)
res.pca <- PCAtot
# res.pca <- PCA(beta_iv1_tot)
dataacpPLOT <- dataacp_add_colorvector(dataphylo, kclusters=7, dataacp)
listforplot <- preparedataforplot(numbPCA1=1, numbPCA2=2, dataacp=dataacpPLOT, AA=AAtot, PCA=PCAtot)
rotation = listforplot[[1]]
matrixAAinPCA = listforplot[[2]]
dataacpPLOT = listforplot[[3]]
dataacpPLOT = dataacpPLOT[, !duplicated(t(dataacpPLOT))]
eigenval = listforplot[[4]]
# preparing the data for the Archetypes identifications
datatoadd <- matrixAAinPCA[,1:2]
rownames(datatoadd)<- NULL
labels <- c("Periodic", "Equilibrium", "Opportunistic")
datatoadd <- data_frame(x=datatoadd[,1], y=datatoadd[,2], z=labels)
# prepare the data for the arrows indentification
rownames(res.pca$rotation) <- c("Amat", "Amax", "M", "K", "Tlvl", "Hab")
select.ind = list(name = dataphylo$Species[which(dataphylo$Species %in% c(#"Gillichthys seta/mirabilis", removed because tm<tmax or Lm<Loo
"Pseudopleuronectes herzensteini",
"Lipophrys pholis",
"Buglossidium luteum",
"Gilchristella aestuaria",
"Chaenocephalus aceratus",
"Glossogobius kokius",
"Brevoortia tyrannus",
"Mugil cephalus",
"Glossogobius giuris"))])
custom_points <- data.frame(res.pca$x)
# plotnames <- dataphylo$Species %>% as.character()
# mylabels <- sapply(plotnames, function(x) ifelse(dataphylo$Species %in% select.ind, "", x)) %>% as.vector()
p<- fviz_pca_biplot(res.pca,
label = c("var"),
pointshape=19,
arrowsize = 0.25,
geom.ind = "none",
col.var = "darkblue", repel= T
)+
scale_colour_manual(values = mycol, name="MSM cluster \ncentroid")
p <- p + geom_point(data = custom_points[which(dataphylo$Species %in% select.ind$name),],
aes(x = PC1, y = PC2),
size = 3, col=c("darkorchid4", "#4575b4", "#91bfdb", "#fc8d59", "gold", "red", "forestgreen", "pink", "black")) #, "forestgreen", "pink"
p <- p + geom_text_repel(data = custom_points[which(dataphylo$Species %in% select.ind$name),],
aes(x = PC1, y = PC2),
label=dataphylo$Species[which(dataphylo$Species %in% select.ind$name)])
pdf(file = paste0(path_plots, "/outliers_teleo.pdf"), height = 8, width=6.8)
print(p)
dev.off()
p
# beneat marine
# 14/10/24
#* Combine plots to shape one unique plot
#* with traits related to time or traits of different kinds
#*
path_plots <- paste0(getwd(), "/02-Analysis/Outputs/plots")
load(paste0(getwd(), "/02-Analysis/Outputs/IMAGE_AA_FOR_ANALYSIS.RData"))
source(paste0(getwd(), "/02-Analysis/Scripts/00-Functions_for_analysis.R"))
load(file=paste0(path_plots, "/ELASMO_PCA_time.RData"))
elasmo <- plot
load(file=paste0(path_plots, "/TELEO_PCA_time.RData"))
teleo <- plot
load(file=paste0(path_plots, "/TOT_PCA_time.RData"))
tot <- plot
plotall <- ggarrange(tot, teleo, NA, elasmo, labels = c("A","B","", "C"))
ggsave(file = paste0(path_plots, "/PCA_combined_time.pdf"), width=13, height=9.5)
# beneat marine
# 14/10/24
# PCA of the complete dataset
path_plots <- paste0(getwd(), "/02-Analysis/Outputs/plots")
load(paste0(getwd(), "/02-Analysis/Outputs/IMAGE_AA_FOR_ANALYSIS.RData"))
source(paste0(getwd(), "/02-Analysis/Scripts/00-Functions_for_analysis.R"))
AXESTOREPRESENT = c(1,2)
# creating the PCA and the data frames associated
PCAtot <- runPCA(dataplot, traits)
plot(PCAtot$x[,AXESTOREPRESENT[1]], PCAtot$x[,AXESTOREPRESENT[2]])
plot(PCAtot)
res.pca <- PCAtot
plot(PCAtot)
dataacp_totPLOT <- dataacp_add_colorvector(dataphylo = dataphylo, kclusters=6, dataacp = dataacp)
clusterscentroids <- dataacp_totPLOT[2][[1]]
listforplot <- preparedataforplot(numbPCA1=AXESTOREPRESENT[1], numbPCA2=AXESTOREPRESENT[2],
dataacp=dataacp_totPLOT, AA=AAtot, PCA=PCAtot)
rotation = listforplot[[1]]
matrixAAinPCA = listforplot[[2]]
dataacpPLOT = listforplot[[3]]
dataacpPLOT = dataacpPLOT[, !duplicated(t(dataacpPLOT))]
eigenval = listforplot[[4]]
# loading the data for the pictures
periodic_uuid <- get_uuid(name = "Sarpa salpa")
periodic_pic <- get_phylopic(uuid = periodic_uuid)
elasmo_uuid <- get_uuid(name = "Squalus suckleyi")
elasmo_pic <- get_phylopic(uuid = elasmo_uuid)
opp_uuid <- get_uuid(name = "Amblyeleotris guttata") # gobiidae
opp_pic <- get_phylopic(uuid = opp_uuid)
plot(opp_pic)
# preparing the data for the Archetypes identifications
datatoadd <- matrixAAinPCA[,AXESTOREPRESENT]
rownames(datatoadd)<- NULL
labels <- c("Equilibrium", "Periodic", "Opportunistic")
datatoadd <- data_frame(x=datatoadd[,1], y=datatoadd[,2], z=labels)
# prepare the data for the arrows indentification
rownames(res.pca$rotation) <- c("Amat", "Amax", "M", "K", "Tlvl", "Hab")
# plot
mycol = c("darkorchid4", "cyan3", "#4575b4", "#91bfdb", "#fee090", "#fc8d59","#d73027", "white", "midnightblue")#
plot <- fviz_pca_biplot(res.pca, axes = AXESTOREPRESENT,
label = c("var"), # label = "none" for individual labels
habillage = , # color by groups
col.ind = as.factor(round(dataacpPLOT$colACP, 2)),
pointshape = 19, alpha = 0.5,
pointsize = 1.5, labelsize = 5,
arrowsize = 1.5,
col.var = "midnightblue",
repel = T
) +  # Suppression de la légende des flèches
geom_mark_ellipse(aes(fill = as.factor(dataacpPLOT$Class),
linetype = as.factor(dataacpPLOT$Class)),
expand = unit(0.5, "mm"), alpha = 0) +
scale_colour_manual(values = mycol, name = "MSM cluster \ncentroid") +  # Ajustement de la couleur
geom_point(data = datatoadd, aes(x = x, y = y), pch=c(23,21,22),
fill = c("royalblue", "#00b159", "tomato"), size = 6,
stroke = 1) +
geom_point(data = res.pca$x[c(which(dataacp$Species %in% c("Amblyeleotris guttata", "Squalus suckleyi", "Sarpa salpa"))),],
aes(x = PC1, y = PC2),
pch = 8, color = "red", size = 5) +
ggtitle(NULL) +
theme(text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.text = element_text(size = 12),
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
legend.key = element_blank()) +
add_phylopic(periodic_pic, alpha = 1, x = as.numeric(datatoadd[2, 1]*1.3),
y = as.numeric(datatoadd[2, 2]*1.3), ysize = 0.4) +
add_phylopic(elasmo_pic, alpha = 1, x = as.numeric(datatoadd[1, 1]*1.3),
y = as.numeric(datatoadd[1, 2]*1.3), ysize = 0.4) +
add_phylopic(opp_pic, alpha = 1, x = as.numeric(datatoadd[3, 1]*1.3),
y = as.numeric(datatoadd[3, 2]*1.3), ysize = 0.4) +
scale_linetype_manual(values = c("solid", "dotted")) +
guides(linetype = guide_legend("Class"), fill="none",
point = guide_legend(override.aes=list(fill=c(mycol[1:4], "white", "white"))))
plot
pdf(file = paste0(path_plots, "/PCA_tot_time.pdf"))
plot
dev.off()
save(plot, file=paste0(path_plots, "/TOT_PCA_time.RData"))
# beneat marine
# 14/10/24
# PCA of the Teleostei species
path_plots <- paste0(getwd(), "/02-Analysis/Outputs/plots")
load(paste0(getwd(), "/02-Analysis/Outputs/IMAGE_AA_FOR_ANALYSIS.RData"))
source(paste0(getwd(), "/02-Analysis/Scripts/00-Functions_for_analysis.R"))
AXESTOREPRESENT = c(1,2)
# creating the PCA and the data frames associated
PCAteleo <- runPCA(dataplot_noelasmo, traits)
plot(PCAteleo$x[,1], PCAteleo$x[,2])
plot(PCAteleo)
res.pca <- PCAteleo
dataacp_noelasmoPLOT <- dataacp_add_colorvector(dataphylo_noelasmo, kclusters=6, dataacp_noelasmo)
listforplot <- preparedataforplot(numbPCA1=1, numbPCA2=2, dataacp=dataacp_noelasmoPLOT, AA=AAteleo, PCA=PCAteleo)
rotation = listforplot[[1]]
matrixAAinPCA = listforplot[[2]]
dataacpPLOT = listforplot[[3]]
dataacpPLOT = dataacpPLOT[, !duplicated(t(dataacpPLOT))]
eigenval = listforplot[[4]]
# preparing the data for the Archetypes identifications
datatoadd <- matrixAAinPCA[,1:2]
rownames(datatoadd)<- NULL
labels <- c("Opportunistic", "Equilibrium", "Periodic")
datatoadd <- data_frame(x=datatoadd[,1], y=datatoadd[,2], z=labels)
# prepare the data for the arrows indentification
rownames(res.pca$rotation) <- c("Amat", "Amax", "M", "K", "Tlvl", "Hab")
# plot
mycol =  c("darkorchid4", "cyan3", "#4575b4", "#91bfdb", "#fee090", "#fc8d59","#d73027")
plot <- fviz_pca_biplot(res.pca, axes = AXESTOREPRESENT,
label = c("var"),
habillage = ,
col.ind = as.factor(round(dataacpPLOT$colACP, 2)),
arrowsize = 1.5, pointshape=19, labelsize = 5, alpha = 0.5,
col.var = "darkblue", repel= T)+
scale_colour_manual(values = mycol, name="MSM cluster \ncentroid") + #*  # Adjust the color scale
geom_point(data = datatoadd, aes(x = x, y = y), pch=c(22,23,21),
fill = c("tomato", "royalblue", "#00b159"), size = 6,
stroke = 1) +
ggtitle(NULL) +
theme(text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.text = element_text(size = 12),
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
legend.key = element_blank()) +
# Manually adjust line types to match ellipses
scale_linetype_manual(values = c("solid", "dotted")) +
# Manually adjust the guide to show the ellipse shapes and lines
guides(fill = "none",
linetype = guide_legend("Class"))
plot
pdf(file = paste0(path_plots, "/PCA_teleo_time.pdf"))
plot
dev.off()
# plot
fviz_pca_biplot(res.pca,
label = c("var"),
habillage = ,
fill.ind = as.factor(dataphylo_noelasmo$Species),
col.ind=as.factor(dataphylo_noelasmo$Species),
select.ind = list(name = which(dataphylo$Species %in% c("Gadus macrocephalus", "Chaenocephalus aceratus", "Lipophrys pholis",
"Engraulis australis", "Brevoortia tyrannus"))),
pointshape=19,
arrowsize = 0.25,
col.var = "darkblue", alpha = 0.2, repel= T)+
scale_colour_manual(values = c("darkorchid4", "#4575b4", "#91bfdb", "#fc8d59", "gold"), name="Outliers of the \ncross-validation") +
ggtitle(NULL)+
labs()+
theme_minimal()+
theme(text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.text = element_text(size = 12))+
guides(shape="none", fill="none")
save(plot, file=paste0(path_plots, "/TELEO_PCA_time.RData"))
# beneat marine
# 14/10/24
# PCA for elasmobranchii species
path_phylosem_out <- paste0(getwd(), "/02-Analysis/Outputs")
path_plots <- paste0(getwd(), "/02-Analysis/Outputs/plots")
load(paste0(path_phylosem_out, "/IMAGE_AA_FOR_ANALYSIS.RData")) # archetypal analysis and pca outputs
source(paste0(getwd(), "/02-Analysis/Scripts/00-Functions_for_analysis.R"))
AXESTOREPRESENT = c(1,2)
# creating the PCA and the data frames associated
PCAelasmo <- runPCA(dataplot_noteleo, traits)
plot(PCAelasmo$x[,AXESTOREPRESENT[1]], PCAelasmo$x[,AXESTOREPRESENT[2]])
plot(PCAelasmo)
res.pca <- PCAelasmo
dataacp_noteleoPLOT <- dataacp_add_colorvector(dataphylo_noteleo, kclusters=10, dataacp_noteleo)
listforplot <- preparedataforplot(numbPCA1=1, numbPCA2=2, dataacp=dataacp_noteleoPLOT, AA=AAelasmo, PCA=PCAelasmo)
rotation = listforplot[[1]]
matrixAAinPCA = listforplot[[2]]
dataacpPLOT = listforplot[[3]]
dataacpPLOT = dataacpPLOT[, !duplicated(t(dataacpPLOT))]
eigenval = listforplot[[4]]
# preparing the data for the Archetypes identifications
datatoadd <- matrixAAinPCA[,1:2]
rownames(datatoadd)<- NULL
datatoadd <- data_frame(x=datatoadd[,1], y=datatoadd[,2])
# prepare the data for the arrows indentification
rownames(res.pca$rotation) <- c("Amat", "Amax", "M", "K", "Tlvl", "Hab")
# plot
mycol =  c("darkorchid4", "#4575b4", "#fee090", "#fc8d59")
plot <- fviz_pca_biplot(res.pca, axes = AXESTOREPRESENT,
label = c("var"),
col.ind= dataacpPLOT$c_m,
arrowsize = 1.5, pointshape=19,labelsize = 5,
col.var = "grey14", alpha = 0.5, repel= T)+
scale_colour_gradient(
low = "#4575b4",
high = "red",
name="MSM color gradient"
)+
ggtitle(NULL) +
theme(text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.text = element_text(size = 12),
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
legend.key = element_blank()
) +
scale_linetype_manual(values = c("solid", "dotted")) +
# Manually adjust the guide to show the ellipse shapes and lines
guides(fill = "none",
linetype = guide_legend("Class"))
plot
pdf(file = paste0(path_plots, "/PCA_elasmo_time.pdf"), width=3.14961, height=3.14961)
plot
dev.off()
ggsave(plot, file = paste0(path_plots, "/PCA_elasmo_time.pdf")) #, width = 80, height = 180, dpi = 600, units = "mm"
save(plot, file=paste0(path_plots, "/ELASMO_PCA_time.RData"))
# beneat marine
# 14/10/24
# Cross validation plots of the data inference
load(paste0(getwd(), "/01-Simulations/Outputs/phylosem_output/imageworkspaceEND.RData")) #data needed for cross validation
path_plots <- paste0(getwd(), "/02-Analysis/Outputs")
pathoutput_CV <- path_plots
path_CV <- paste0(getwd(), "/01-Simulations/Outputs/phylosem_output")
source(paste0(getwd(), "/02-Analysis/Scripts/00-Functions_for_analysis.R"))
semID=1
p <- plot_checkphylosemdata(semID, trait="c_m", name=nameCV[2],
sample=list(sampletot$sample),
maxCV=list(sampletot$maxCV), names_var="log(MSM)")
p2 <- plot_checkphylosemdata(semID, trait="tm", name=nameCV[2],
sample=list(sampletot$sample),
maxCV=list(sampletot$maxCV), names_var="log(Maturation age)")
p3 <- plot_checkphylosemdata(semID, trait="Lm", name=nameCV[2],
sample=list(sampletot$sample),
maxCV=list(sampletot$maxCV), names_var="log(Maturation length)")
p4 <- plot_checkphylosemdata(semID, trait="tmax", name=nameCV[2],
sample=list(sampletot$sample),
maxCV=list(sampletot$maxCV), names_var="log(Max age)")
p5 <- plot_checkphylosemdata(semID, trait="K", name=nameCV[2],
sample=list(sampletot$sample),
maxCV=list(sampletot$maxCV), names_var="K")
ph1 <- plot_checkphylosemdata(semID, trait="habitatbenthopelagic", name=nameCV[2],
sample=list(sampletot$sample),
maxCV=list(sampletot$maxCV), names_var="Benthopelagic")
p6 <- plot_checkphylosemdata(semID, trait="Woo", name=nameCV[2],
sample=list(sampletot$sample),
maxCV=list(sampletot$maxCV), names_var="log(Infinity weight)")
p1 <- plot_checkphylosemdata(semID, trait="Loo", name=nameCV[2],
sample=list(sampletot$sample),
maxCV=list(sampletot$maxCV), names_var="log(Infinity length)")
p7 <- plot_checkphylosemdata(semID, trait="M", name=nameCV[2],
sample=list(sampletot$sample),
maxCV=list(sampletot$maxCV), names_var="Mortality")
p8 <- plot_checkphylosemdata(semID, trait="TLDiet", name=nameCV[2],
sample=list(sampletot$sample),
maxCV=list(sampletot$maxCV), names_var="Trophic level")
p9 <- plot_checkphylosemdata(semID, trait="fecundity", name=nameCV[2],
sample=list(sampletot$sample),
maxCV=list(sampletot$maxCV), names_var="log(Fecundity)")
ph2 <- plot_checkphylosemdata(semID, trait="habitatdemersal", name=nameCV[2],
sample=list(sampletot$sample),
maxCV=list(sampletot$maxCV), names_var="Demersal")
p10 <- plot_checkphylosemdata(semID, trait="Min_caudalpeduncle_depth", name=nameCV[2],
sample=list(sampletot$sample),
maxCV=list(sampletot$maxCV), names_var="log(Peduncle depth)")
p11 <- plot_checkphylosemdata(semID, trait="Lower_jaw_length", name=nameCV[2],
sample=list(sampletot$sample),
maxCV=list(sampletot$maxCV), names_var="log(Jaw length)")
p12 <- plot_checkphylosemdata(semID, trait="Max_body_depth", name=nameCV[2],
sample=list(sampletot$sample),
maxCV=list(sampletot$maxCV), names_var="log(Body depth)")
p13 <- plot_checkphylosemdata(semID, trait="Max_body_width", name=nameCV[2],
sample=list(sampletot$sample),
maxCV=list(sampletot$maxCV), names_var="log(Body width)")
p14 <- plot_checkphylosemdata(semID, trait="Temperature", name=nameCV[2],
sample=list(sampletot$sample),
maxCV=list(sampletot$maxCV), names_var="log(Temperature)")
ph3<- plot_checkphylosemdata(semID, trait="habitatpelagic", name=nameCV[2],
sample=list(sampletot$sample),
maxCV=list(sampletot$maxCV), names_var="Pelagic ")
library(patchwork)
design <- "
112222
112222
332222
"
final<-p+
(p1+p2+p3+p4+p5+p6+p7+p8+p9+p10+p11+p12+p13+p14 + plot_layout(ncol = 4, nrow=4, guides = "collect")) +
((ph1+ ph2 + ph3 + plot_layout(ncol=2, nrow=2, guides = "collect"))) +
plot_layout(guides = "collect", design=design)   # guide_area() +
grDevices::pdf(file=paste0(pathoutput_CV, "/plot_CrossValidation/", "plotarrangedCV_clean.pdf"), height=9, width=15.37)
print(final)
dev.off()
# beneat marine
# 14/10/24
# to represent the barplots for the MSM paper :
# 2 analysis :
#   MSM value elasmo//teleo
#   Barplots of the archetypal analysis (AAA) trait values
# INITIALISATION
path_phylosem_out <- paste0(getwd(), "/02-Analysis/Outputs")
path_plots <- paste0(getwd(), "/02-Analysis/Outputs/plots")
load(paste0(path_phylosem_out, "/IMAGE_AA_FOR_ANALYSIS.RData")) # archetypal analysis and pca outputs
source(paste0(getwd(), "/02-Analysis/Scripts/00-Functions_for_analysis.R"))
AAAelasmo <- AAelasmo
AAAteleo <- AAteleo
AAAtot <- AAtot
colnames(AAAelasmo$archetypes)[which(colnames(AAAelasmo$archetypes) == "fecundity")]<- "Fecundity"
colnames(AAAteleo$archetypes)[which(colnames(AAAteleo$archetypes) == "fecundity")]<- "Fecundity"
colnames(AAAtot$archetypes)[which(colnames(AAAtot$archetypes) == "fecundity")]<- "Fecundity"
# compare MSM ELASMO TELEO
sd_teleo <- sd(dataphylo[which(dataphylo$Class == "Teleostei"),"c_m"])
sd_elas <- sd(dataphylo[which(dataphylo$Class == "Elasmobranchii"),"c_m"])
mean_teleo <- mean(dataphylo[which(dataphylo$Class == "Teleostei"),"c_m"])
mean_elas <- mean(dataphylo[which(dataphylo$Class == "Elasmobranchii"),"c_m"])
data <- data.frame(
Class=c("Teleostei", "Elasmobranchii"),
MSM=c(mean_teleo, mean_elas),
sd=c(sd_teleo, sd_elas)
)
stat.test <- dataphylo %>%
t_test(c_m ~ Class) %>%
adjust_pvalue(method = "bonferroni") %>%
add_significance("p.adj") %>%
add_xy_position(fun = "mean_sd", x = "Class", dodge = 0.8)
stat.test
lm(dataphylo$c_m ~ dataphylo$Class)->a
# plot(a)  # control of the diagnostic plots
bp <- ggbarplot(
data, x = "Class", y = "MSM", add = "sd",
fill= "Class", palette = c("grey", "black"),
position = position_dodge(0.8)
)
bp + stat_pvalue_manual(
stat.test,  label = "p.adj.signif", tip.length = 0.01,
bracket.nudge.y = -1.05)+
xlab(" ")+
theme(legend.position = 'none')
# Barplot TOT
rownames(AAAtot$archetypes)<- c("Equilibrium", "Periodic", "Opportunistic")
archetype_traits_long <- as.data.frame(AAAtot$archetypes) %>%
tibble::rownames_to_column(var = "Archetype") %>%
pivot_longer(cols = -Archetype, names_to = "Trait", values_to = "Value")
custom_colors <- c("Equilibrium" = "royalblue",
"Periodic" = "#00b159",
"Opportunistic" = "tomato")
plottot <- ggplot(archetype_traits_long, aes(x = Trait, y = Value, fill = Archetype)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = round(Value, 2)), position = position_dodge(width = 0.9), vjust = -0.3, size=4) +
scale_fill_manual(values = custom_colors) +
labs(title = "Complete dataset archetypes trait values",
x = "Trait",
y = "Trait value",
fill = "Archetype") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave(plottot, file = paste0(path_plots, "/barplot_tot.pdf"), width=5.63, height=4.03) #, width = 80, height = 180, dpi = 600, units = "mm"
# Barplot ELASMO
rownames(AAAelasmo$archetypes)<- c("AA1", "AA2", "AA3")
archetype_traits_long <- as.data.frame(AAAelasmo$archetypes) %>%
tibble::rownames_to_column(var = "Archetype") %>%
pivot_longer(cols = -Archetype, names_to = "Trait", values_to = "Value")
custom_colors <- c("AA1" = "lightgrey",
"AA2" = "grey",
"AA3" = "darkgrey")
plot <- ggplot(archetype_traits_long, aes(x = Trait, y = Value, fill = Archetype)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = round(Value, 2)), position = position_dodge(width = 0.9), vjust = -0.3, size=4) +
scale_fill_manual(values = custom_colors) +
labs(title = "Elasmobranchs species archetypes trait values",
x = "Trait",
y = "Trait value",
fill = "Archetype") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave(plot, file = paste0(path_plots, "/barplot_elasmo.pdf"), width=5.63, height=4.03) #, width = 80, height = 180, dpi = 600, units = "mm"
# Barplot TELEO
rownames(AAAteleo$archetypes)<- c("Opportunistic", "Equilibrium", "Periodic")
archetype_traits_long <- as.data.frame(AAAteleo$archetypes) %>%
tibble::rownames_to_column(var = "Archetype") %>%
pivot_longer(cols = -Archetype, names_to = "Trait", values_to = "Value")
custom_colors <- c("Equilibrium" = "royalblue",
"Periodic" = "#00b159",
"Opportunistic" = "tomato")
plotteleo <- ggplot(archetype_traits_long, aes(x = Trait, y = Value, fill = Archetype)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = round(Value, 2)), position = position_dodge(width = 0.9), vjust = -0.3, size=4) +
scale_fill_manual(values = custom_colors) +
labs(title = "Teleost species archetypes trait values",
x = "Trait",
y = "Trait value",
fill = "Archetype") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave(plotteleo, file = paste0(path_plots, "/barplot_teleo.pdf"), width=5.63, height=4.03)
# save combined barplots
combined <- ggarrange(plottot, plotteleo, plot, ncol = 1, nrow=3, common.legend = T)
ggsave(combined, file=paste0(path_plots, "/barplot_combined_time.pdf"), width=7 , height=12)
View(df.1)
