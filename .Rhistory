# plot
fviz_pca_biplot(res.pca,
label = c("var"),
habillage = ,
fill.ind = as.factor(dataphylo_noelasmo$Species),
col.ind=as.factor(dataphylo_noelasmo$Species),
select.ind = list(name = which(dataphylo$Species %in% c("Gadus macrocephalus", "Chaenocephalus aceratus", "Lipophrys pholis",
"Engraulis australis", "Brevoortia tyrannus"))),
pointshape=19,
arrowsize = 0.25,
col.var = "darkblue", alpha = 0.2, repel= T)+
scale_colour_manual(values = c("darkorchid4", "#4575b4", "#91bfdb", "#fc8d59", "gold"), name="Outliers of the \ncross-validation") +
ggtitle(NULL)+
labs()+
theme_minimal()+
theme(text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.text = element_text(size = 12))+
guides(shape="none", fill="none")
save(plot, file=paste0(path_plots, "/TELEO_PCA_time.RData"))
# beneat marine
# 14/10/24
# PCA of the complete dataset
path_plots <- paste0(getwd(), "/02-Analysis/Outputs/plots")
load(paste0(getwd(), "/02-Analysis/Outputs/IMAGETOT_STD_Log_BodyDepth.RData"))
source(paste0(getwd(), "/02-Analysis/Scripts/00-Functions_for_analysis.R"))
AXESTOREPRESENT = c(1,2)
# creating the PCA and the data frames associated
PCAtot <- runPCA(dataplot, traits)
plot(PCAtot$x[,AXESTOREPRESENT[1]], PCAtot$x[,AXESTOREPRESENT[2]])
plot(PCAtot)
res.pca <- PCAtot
plot(PCAtot)
dataacp_totPLOT <- dataacp_add_colorvector(dataphylo = dataphylo, kclusters=6, dataacp = dataacp)
clusterscentroids <- dataacp_totPLOT[2][[1]]
listforplot <- preparedataforplot(numbPCA1=AXESTOREPRESENT[1], numbPCA2=AXESTOREPRESENT[2],
dataacp=dataacp_totPLOT, AA=AAtot, PCA=PCAtot)
rotation = listforplot[[1]]
matrixAAinPCA = listforplot[[2]]
dataacpPLOT = listforplot[[3]]
dataacpPLOT = dataacpPLOT[, !duplicated(t(dataacpPLOT))]
eigenval = listforplot[[4]]
# loading the data for the pictures
periodic_uuid <- get_uuid(name = "Sarpa salpa")
periodic_pic <- get_phylopic(uuid = periodic_uuid)
elasmo_uuid <- get_uuid(name = "Squalus suckleyi")
elasmo_pic <- get_phylopic(uuid = elasmo_uuid)
opp_uuid <- get_uuid(name = "Amblyeleotris guttata") # gobiidae
opp_pic <- get_phylopic(uuid = opp_uuid)
plot(opp_pic)
# preparing the data for the Archetypes identifications
datatoadd <- matrixAAinPCA[,AXESTOREPRESENT]
rownames(datatoadd)<- NULL
labels <- c("Equilibrium", "Periodic", "Opportunistic")
datatoadd <- data_frame(x=datatoadd[,1], y=datatoadd[,2], z=labels)
# prepare the data for the arrows indentification
rownames(res.pca$rotation) <- c("Amat", "Amax", "M", "K", "Tlvl", "Hab")
# plot
mycol = c("darkorchid4", "cyan3", "#4575b4", "#91bfdb", "#fee090", "#fc8d59","#d73027", "white", "midnightblue")#
plot <- fviz_pca_biplot(res.pca, axes = AXESTOREPRESENT,
label = c("var"), # label = "none" for individual labels
habillage = , # color by groups
col.ind = as.factor(round(dataacpPLOT$colACP, 2)),
pointshape = 19, alpha = 0.5,
pointsize = 1.5, labelsize = 5,
arrowsize = 1.5,
col.var = "midnightblue",
repel = T
) +  # Suppression de la légende des flèches
geom_mark_ellipse(aes(fill = as.factor(dataacpPLOT$Class),
linetype = as.factor(dataacpPLOT$Class)),
expand = unit(0.5, "mm"), alpha = 0) +
scale_colour_manual(values = mycol, name = "MSM cluster \ncentroid") +  # Ajustement de la couleur
geom_point(data = datatoadd, aes(x = x, y = y), pch=c(23,21,22),
fill = c("royalblue", "#00b159", "tomato"), size = 6,
stroke = 1) +
geom_point(data = res.pca$x[c(which(dataacp$Species %in% c("Amblyeleotris guttata", "Squalus suckleyi", "Sarpa salpa"))),],
aes(x = PC1, y = PC2),
pch = 8, color = "red", size = 5) +
ggtitle(NULL) +
theme(text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.text = element_text(size = 12),
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
legend.key = element_blank()) +
add_phylopic(periodic_pic, alpha = 1, x = as.numeric(datatoadd[2, 1]*1.3),
y = as.numeric(datatoadd[2, 2]*1.3), ysize = 0.4) +
add_phylopic(elasmo_pic, alpha = 1, x = as.numeric(datatoadd[1, 1]*1.3),
y = as.numeric(datatoadd[1, 2]*1.3), ysize = 0.4) +
add_phylopic(opp_pic, alpha = 1, x = as.numeric(datatoadd[3, 1]*1.3),
y = as.numeric(datatoadd[3, 2]*1.3), ysize = 0.4) +
scale_linetype_manual(values = c("solid", "dotted")) +
guides(linetype = guide_legend("Class"), fill="none",
point = guide_legend(override.aes=list(fill=c(mycol[1:4], "white", "white"))))
plot
pdf(file = paste0(path_plots, "/PCA_tot_time.pdf"))
plot
dev.off()
save(plot, file=paste0(path_plots, "/TOT_PCA_time.RData"))
# beneat marine
# 14/10/24
#* Combine plots to shape one unique plot
#* with traits related to time or traits of different kinds
#*
path_plots <- paste0(getwd(), "/02-Analysis/Outputs/plots")
load(paste0(getwd(), "/02-Analysis/Outputs/IMAGETOT_STD_Log_BodyDepth.RData"))
source(paste0(getwd(), "/02-Analysis/Scripts/00-Functions_for_analysis.R"))
load(file=paste0(path_plots, "/ELASMO_PCA_time.RData"))
elasmo <- plot
load(file=paste0(path_plots, "/TELEO_PCA_time.RData"))
teleo <- plot
load(file=paste0(path_plots, "/TOT_PCA_time.RData"))
tot <- plot
plotall <- ggarrange(tot, teleo, NA, elasmo, labels = c("A","B","", "C"))
ggsave(file = paste0(path_plots, "/PCA_combined_time.pdf"), width=13, height=9.5)
# beneat marine
# 14/10/24
# Ternary plots of the archetypal analysis
path_phylosem_out <- paste0(getwd(), "/02-Analysis/Outputs")
path_plots <- paste0(getwd(), "/02-Analysis/Outputs/plots")
load(paste0(path_phylosem_out, "/IMAGETOT_STD_Log_BodyDepth.RData")) # archetypal analysis and pca outputs
source(paste0(getwd(), "/02-Analysis/Scripts/00-Functions_for_analysis.R"))
AAAtot <- AAtot
# ternary plot with the gradient of mass specific maintenance values
beta_iv1_tot = dataplot[, which(colnames(dataplot) %in%  traits)]
t(parameters(AAAtot))     ## This shows the trait values of the selected archetypes
veccol_tot_barplot <- c("royalblue", "darkgreen", "tomato")
barplot(AAAtot, beta_iv1_tot, percentiles=TRUE, col.atypes = veccol_tot_barplot)
barplot(AAAtot, beta_iv1_tot, percentiles=TRUE)  # same but as a barplot
pcplot(AAAtot, beta_iv1_tot, atypes.col = veccol_tot_barplot, atypes.lty =c(1,2,3)) # same but as a plot showing each value
plot1 <- plotggtern(dataphylo=dataphylo, AA=AAAtot, vecAA_eq=vecAA_eq, bins=6)+
labs(
x = "Equilibrium",       # Custom name for x-axis
y = "Periodic",       # Custom name for y-axis
z = "Opportunistic",        # Custom name for z-axis
)+
theme(
tern.axis.title.T = element_text(size = 12, angle = 0, hjust = 0.5), # Top axis
tern.axis.title.L = element_text(size = 12, angle = -60, hjust = 0.5), # Left axis
tern.axis.title.R = element_text(size = 12, angle = -60, hjust = 1.25, vjust = -0.5) # Right axis
)
plot1
ggsave(plot1, file = paste0(path_plots, "/ternary_plot_tot_time.pdf"), width=8.02, height=5.1 )
# ternary plot with example species
cmstd <- dataphylo$c_m
alpha <- AAAtot$alphas
df <- cbind(alpha, cmstd)
a1 = AAAtot
genecolour <- rep('NA', nrow(df))
genecolour2 <- rep('NA', nrow(df))
genecolour[dataphylo$Family == 'Gobiidae'] <- 'brown3'
genecolour[dataphylo$Family == 'Sparidae'] <- '#00b159'
genecolour[dataphylo$Family == 'Squalidae'] <- 'royalblue'
genecolour2[dataphylo$Family == 'Gobiidae'] <- 'black'
genecolour2[dataphylo$Family == 'Sparidae'] <- 'black'
genecolour2[dataphylo$Family == 'Squalidae'] <- 'black'
genecolour_names <- rep(' ', length(genecolour))
genecolour_names[which(genecolour == 'brown3')[21]] <- c("Gobiidae")
genecolour_names[which(genecolour == '#00b159')[2]] <- c("Sparidae")
genecolour_names[which(genecolour == 'royalblue')[30]] <- c("Squalidae")
colnames(df) <-  c("x", "y", "z", "d")
df <- as.data.frame(df)
df$group <- genecolour
plot <- ggtern(df,aes(x=x,y=y,z=z)) +
geom_point(colour = genecolour, size=2.5)+
theme_classic()+
labs(
x = "Equilibrium",       # Custom name for x-axis
y = "Periodic",       # Custom name for y-axis
z = "Opportunistic",        # Custom name for z-axis
colour= "Archetype"
)+
theme(
tern.axis.title.T = element_text(size = 12, angle = 0, hjust = 0.5), # Top axis
tern.axis.title.L = element_text(size = 12, angle = -58, hjust = 0.5), # Left axis
tern.axis.title.R = element_text(size = 12, angle = -60, hjust = 1.25, vjust = -0.5) # Right axis
)+
scale_colour_manual(values = c( "Elasmobranchii" = "royalblue",
"Gobiidae" = "tomato", "Trichiuridae"="#00b159"))+
geom_text(aes(label = genecolour_names),
hjust = -0.2,
vjust = -1.5,
size = 4.5,
fontface = "italic",
color = genecolour2)
plot
ggsave(plot, file = paste0(path_plots, "/ternary_plot_tot_spe_archetypes_time.pdf"), width=8.02, height=5.1) #, width = 80, height = 180, dpi = 600, units = "mm"
par(mfrow = c(2, 2), mar = rep(0.5, 4))
plot
plot1
# beneat marine
# 14/10/24
# PCA of the Teleostei species
path_plots <- paste0(getwd(), "/02-Analysis/Outputs/plots")
load(paste0(getwd(), "/02-Analysis/Outputs/IMAGETOT_STD_Log_BodyDepth.RData"))
source(paste0(getwd(), "/02-Analysis/Scripts/00-Functions_for_analysis.R"))
AXESTOREPRESENT=c(1,2)
# creating the PCA and the data frames associated
PCAtot <- runPCA(dataplot_2, traits_2)
plot(PCAtot$x[,1], PCAtot$x[,2])
plot(PCAtot)
res.pca <- PCAtot
# res.pca <- PCA(beta_iv1_tot)
dataacpPLOT <- dataacp_add_colorvector(dataphylo_2, kclusters=7, dataacp_2)
listforplot <- preparedataforplot(numbPCA1=1, numbPCA2=2, dataacp=dataacpPLOT, AA=AAtot_2, PCA=PCAtot)
rotation = listforplot[[1]]
matrixAAinPCA = listforplot[[2]]
dataacpPLOT = listforplot[[3]]
dataacpPLOT = dataacpPLOT[, !duplicated(t(dataacpPLOT))]
eigenval = listforplot[[4]]
# beneat marine
# 14/10/24
# PCA for elasmobranchii species
path_phylosem_out <- paste0(getwd(), "/02-Analysis/Outputs")
path_plots <- paste0(getwd(), "/02-Analysis/Outputs/plots")
load(paste0(path_phylosem_out, "/IMAGETOT_STD_Log_BodyDepth.RData")) # archetypal analysis and pca outputs
source(paste0(getwd(), "/02-Analysis/Scripts/00-Functions_for_analysis.R"))
AXESTOREPRESENT = c(1,2)
# creating the PCA and the data frames associated
PCAelasmo <- runPCA(dataplot_noteleo, traits)
plot(PCAelasmo$x[,AXESTOREPRESENT[1]], PCAelasmo$x[,AXESTOREPRESENT[2]])
plot(PCAelasmo)
res.pca <- PCAelasmo
dataacp_noteleoPLOT <- dataacp_add_colorvector(dataphylo_noteleo, kclusters=10, dataacp_noteleo)
listforplot <- preparedataforplot(numbPCA1=1, numbPCA2=2, dataacp=dataacp_noteleoPLOT, AA=AAelasmo, PCA=PCAelasmo)
rotation = listforplot[[1]]
matrixAAinPCA = listforplot[[2]]
dataacpPLOT = listforplot[[3]]
dataacpPLOT = dataacpPLOT[, !duplicated(t(dataacpPLOT))]
eigenval = listforplot[[4]]
# preparing the data for the Archetypes identifications
datatoadd <- matrixAAinPCA[,1:2]
rownames(datatoadd)<- NULL
datatoadd <- data_frame(x=datatoadd[,1], y=datatoadd[,2])
# prepare the data for the arrows indentification
rownames(res.pca$rotation) <- c("Amat", "Amax", "M", "K", "Tlvl", "Hab")
# plot
mycol =  c("darkorchid4", "#4575b4", "#fee090", "#fc8d59")
plot <- fviz_pca_biplot(res.pca, axes = AXESTOREPRESENT,
label = c("var"),
col.ind= dataacpPLOT$c_m,
arrowsize = 1.5, pointshape=19,labelsize = 5,
col.var = "grey14", alpha = 0.5, repel= T)+
scale_colour_gradient(
low = "#4575b4",
high = "red",
name="MSM color gradient"
)+
ggtitle(NULL) +
theme(text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.text = element_text(size = 12),
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
legend.key = element_blank()
) +
scale_linetype_manual(values = c("solid", "dotted")) +
# Manually adjust the guide to show the ellipse shapes and lines
guides(fill = "none",
linetype = guide_legend("Class"))
plot
pdf(file = paste0(path_plots, "/PCA_elasmo_time.pdf"), width=3.14961, height=3.14961)
plot
dev.off()
ggsave(plot, file = paste0(path_plots, "/PCA_elasmo_time.pdf")) #, width = 80, height = 180, dpi = 600, units = "mm"
save(plot, file=paste0(path_plots, "/ELASMO_PCA_time.RData"))
# beneat marine
# 14/10/24
# PCA of the Teleostei species
path_plots <- paste0(getwd(), "/02-Analysis/Outputs/plots")
load(paste0(getwd(), "/02-Analysis/Outputs/IMAGETOT_STD_Log_BodyDepth.RData"))
source(paste0(getwd(), "/02-Analysis/Scripts/00-Functions_for_analysis.R"))
AXESTOREPRESENT = c(1,2)
# creating the PCA and the data frames associated
PCAteleo <- runPCA(dataplot_noelasmo, traits)
plot(PCAteleo$x[,1], PCAteleo$x[,2])
plot(PCAteleo)
res.pca <- PCAteleo
dataacp_noelasmoPLOT <- dataacp_add_colorvector(dataphylo_noelasmo, kclusters=6, dataacp_noelasmo)
listforplot <- preparedataforplot(numbPCA1=1, numbPCA2=2, dataacp=dataacp_noelasmoPLOT, AA=AAteleo, PCA=PCAteleo)
rotation = listforplot[[1]]
matrixAAinPCA = listforplot[[2]]
dataacpPLOT = listforplot[[3]]
dataacpPLOT = dataacpPLOT[, !duplicated(t(dataacpPLOT))]
eigenval = listforplot[[4]]
# preparing the data for the Archetypes identifications
datatoadd <- matrixAAinPCA[,1:2]
rownames(datatoadd)<- NULL
labels <- c("Opportunistic", "Equilibrium", "Periodic")
datatoadd <- data_frame(x=datatoadd[,1], y=datatoadd[,2], z=labels)
# prepare the data for the arrows indentification
rownames(res.pca$rotation) <- c("Amat", "Amax", "M", "K", "Tlvl", "Hab")
# plot
mycol =  c("darkorchid4", "cyan3", "#4575b4", "#91bfdb", "#fee090", "#fc8d59","#d73027")
plot <- fviz_pca_biplot(res.pca, axes = AXESTOREPRESENT,
label = c("var"),
habillage = ,
col.ind = as.factor(round(dataacpPLOT$colACP, 2)),
arrowsize = 1.5, pointshape=19, labelsize = 5, alpha = 0.5,
col.var = "darkblue", repel= T)+
scale_colour_manual(values = mycol, name="MSM cluster \ncentroid") + #*  # Adjust the color scale
geom_point(data = datatoadd, aes(x = x, y = y), pch=c(22,23,21),
fill = c("tomato", "royalblue", "#00b159"), size = 6,
stroke = 1) +
ggtitle(NULL) +
theme(text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.text = element_text(size = 12),
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
legend.key = element_blank()) +
# Manually adjust line types to match ellipses
scale_linetype_manual(values = c("solid", "dotted")) +
# Manually adjust the guide to show the ellipse shapes and lines
guides(fill = "none",
linetype = guide_legend("Class"))
plot
pdf(file = paste0(path_plots, "/PCA_teleo_time.pdf"))
plot
dev.off()
# plot
fviz_pca_biplot(res.pca,
label = c("var"),
habillage = ,
fill.ind = as.factor(dataphylo_noelasmo$Species),
col.ind=as.factor(dataphylo_noelasmo$Species),
select.ind = list(name = which(dataphylo$Species %in% c("Gadus macrocephalus", "Chaenocephalus aceratus", "Lipophrys pholis",
"Engraulis australis", "Brevoortia tyrannus"))),
pointshape=19,
arrowsize = 0.25,
col.var = "darkblue", alpha = 0.2, repel= T)+
scale_colour_manual(values = c("darkorchid4", "#4575b4", "#91bfdb", "#fc8d59", "gold"), name="Outliers of the \ncross-validation") +
ggtitle(NULL)+
labs()+
theme_minimal()+
theme(text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.text = element_text(size = 12))+
guides(shape="none", fill="none")
save(plot, file=paste0(path_plots, "/TELEO_PCA_time.RData"))
# beneat marine
# 14/10/24
# PCA of the complete dataset
path_plots <- paste0(getwd(), "/02-Analysis/Outputs/plots")
load(paste0(getwd(), "/02-Analysis/Outputs/IMAGETOT_STD_Log_BodyDepth.RData"))
source(paste0(getwd(), "/02-Analysis/Scripts/00-Functions_for_analysis.R"))
AXESTOREPRESENT = c(1,2)
# creating the PCA and the data frames associated
PCAtot <- runPCA(dataplot, traits)
plot(PCAtot$x[,AXESTOREPRESENT[1]], PCAtot$x[,AXESTOREPRESENT[2]])
plot(PCAtot)
res.pca <- PCAtot
plot(PCAtot)
dataacp_totPLOT <- dataacp_add_colorvector(dataphylo = dataphylo, kclusters=6, dataacp = dataacp)
clusterscentroids <- dataacp_totPLOT[2][[1]]
listforplot <- preparedataforplot(numbPCA1=AXESTOREPRESENT[1], numbPCA2=AXESTOREPRESENT[2],
dataacp=dataacp_totPLOT, AA=AAtot, PCA=PCAtot)
rotation = listforplot[[1]]
matrixAAinPCA = listforplot[[2]]
dataacpPLOT = listforplot[[3]]
dataacpPLOT = dataacpPLOT[, !duplicated(t(dataacpPLOT))]
eigenval = listforplot[[4]]
# loading the data for the pictures
periodic_uuid <- get_uuid(name = "Sarpa salpa")
periodic_pic <- get_phylopic(uuid = periodic_uuid)
elasmo_uuid <- get_uuid(name = "Squalus suckleyi")
elasmo_pic <- get_phylopic(uuid = elasmo_uuid)
opp_uuid <- get_uuid(name = "Amblyeleotris guttata") # gobiidae
opp_pic <- get_phylopic(uuid = opp_uuid)
plot(opp_pic)
# preparing the data for the Archetypes identifications
datatoadd <- matrixAAinPCA[,AXESTOREPRESENT]
rownames(datatoadd)<- NULL
labels <- c("Equilibrium", "Periodic", "Opportunistic")
datatoadd <- data_frame(x=datatoadd[,1], y=datatoadd[,2], z=labels)
# prepare the data for the arrows indentification
rownames(res.pca$rotation) <- c("Amat", "Amax", "M", "K", "Tlvl", "Hab")
# plot
mycol = c("darkorchid4", "cyan3", "#4575b4", "#91bfdb", "#fee090", "#fc8d59","#d73027", "white", "midnightblue")#
plot <- fviz_pca_biplot(res.pca, axes = AXESTOREPRESENT,
label = c("var"), # label = "none" for individual labels
habillage = , # color by groups
col.ind = as.factor(round(dataacpPLOT$colACP, 2)),
pointshape = 19, alpha = 0.5,
pointsize = 1.5, labelsize = 5,
arrowsize = 1.5,
col.var = "midnightblue",
repel = T
) +  # Suppression de la légende des flèches
geom_mark_ellipse(aes(fill = as.factor(dataacpPLOT$Class),
linetype = as.factor(dataacpPLOT$Class)),
expand = unit(0.5, "mm"), alpha = 0) +
scale_colour_manual(values = mycol, name = "MSM cluster \ncentroid") +  # Ajustement de la couleur
geom_point(data = datatoadd, aes(x = x, y = y), pch=c(23,21,22),
fill = c("royalblue", "#00b159", "tomato"), size = 6,
stroke = 1) +
geom_point(data = res.pca$x[c(which(dataacp$Species %in% c("Amblyeleotris guttata", "Squalus suckleyi", "Sarpa salpa"))),],
aes(x = PC1, y = PC2),
pch = 8, color = "red", size = 5) +
ggtitle(NULL) +
theme(text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.text = element_text(size = 12),
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
legend.key = element_blank()) +
add_phylopic(periodic_pic, alpha = 1, x = as.numeric(datatoadd[2, 1]*1.3),
y = as.numeric(datatoadd[2, 2]*1.3), ysize = 0.4) +
add_phylopic(elasmo_pic, alpha = 1, x = as.numeric(datatoadd[1, 1]*1.3),
y = as.numeric(datatoadd[1, 2]*1.3), ysize = 0.4) +
add_phylopic(opp_pic, alpha = 1, x = as.numeric(datatoadd[3, 1]*1.3),
y = as.numeric(datatoadd[3, 2]*1.3), ysize = 0.4) +
scale_linetype_manual(values = c("solid", "dotted")) +
guides(linetype = guide_legend("Class"), fill="none",
point = guide_legend(override.aes=list(fill=c(mycol[1:4], "white", "white"))))
plot
pdf(file = paste0(path_plots, "/PCA_tot_time.pdf"))
plot
dev.off()
save(plot, file=paste0(path_plots, "/TOT_PCA_time.RData"))
# beneat marine
# 14/10/24
#* Combine plots to shape one unique plot
#* with traits related to time or traits of different kinds
#*
path_plots <- paste0(getwd(), "/02-Analysis/Outputs/plots")
load(paste0(getwd(), "/02-Analysis/Outputs/IMAGETOT_STD_Log_BodyDepth.RData"))
source(paste0(getwd(), "/02-Analysis/Scripts/00-Functions_for_analysis.R"))
load(file=paste0(path_plots, "/ELASMO_PCA_time.RData"))
elasmo <- plot
load(file=paste0(path_plots, "/TELEO_PCA_time.RData"))
teleo <- plot
load(file=paste0(path_plots, "/TOT_PCA_time.RData"))
tot <- plot
plotall <- ggarrange(tot, teleo, NA, elasmo, labels = c("A","B","", "C"))
ggsave(file = paste0(path_plots, "/PCA_combined_time.pdf"), width=13, height=9.5)
plotall
final
# beneat marine
# 14/10/24
# PCA of the Teleostei species
path_plots <- paste0(getwd(), "/02-Analysis/Outputs/plots")
load(paste0(getwd(), "/02-Analysis/Outputs/IMAGETOT_STD_Log_BodyDepth.RData"))
source(paste0(getwd(), "/02-Analysis/Scripts/00-Functions_for_analysis.R"))
AXESTOREPRESENT=c(1,2)
# creating the PCA and the data frames associated
PCAtot <- runPCA(dataplot_2, traits_2)
plot(PCAtot$x[,1], PCAtot$x[,2])
plot(PCAtot)
res.pca <- PCAtot
# res.pca <- PCA(beta_iv1_tot)
dataacpPLOT <- dataacp_add_colorvector(dataphylo_2, kclusters=7, dataacp_2)
listforplot <- preparedataforplot(numbPCA1=1, numbPCA2=2, dataacp=dataacpPLOT, AA=AAtot_2, PCA=PCAtot)
rotation = listforplot[[1]]
matrixAAinPCA = listforplot[[2]]
dataacpPLOT = listforplot[[3]]
dataacpPLOT = dataacpPLOT[, !duplicated(t(dataacpPLOT))]
eigenval = listforplot[[4]]
# beneat marine
# 14/10/24
# PCA of the Teleostei species
path_plots <- paste0(getwd(), "/02-Analysis/Outputs/plots")
load(paste0(getwd(), "/02-Analysis/Outputs/IMAGETOT_STD_Log_BodyDepth.RData"))
source(paste0(getwd(), "/02-Analysis/Scripts/00-Functions_for_analysis.R"))
AXESTOREPRESENT=c(1,2)
# creating the PCA and the data frames associated
PCAtot <- runPCA(dataplot, traits)
plot(PCAtot$x[,1], PCAtot$x[,2])
plot(PCAtot)
res.pca <- PCAtot
# res.pca <- PCA(beta_iv1_tot)
dataacpPLOT <- dataacp_add_colorvector(dataphylo, kclusters=7, dataacp)
listforplot <- preparedataforplot(numbPCA1=1, numbPCA2=2, dataacp=dataacpPLOT, AA=AAtot, PCA=PCAtot)
rotation = listforplot[[1]]
matrixAAinPCA = listforplot[[2]]
dataacpPLOT = listforplot[[3]]
dataacpPLOT = dataacpPLOT[, !duplicated(t(dataacpPLOT))]
eigenval = listforplot[[4]]
# preparing the data for the Archetypes identifications
datatoadd <- matrixAAinPCA[,1:2]
rownames(datatoadd)<- NULL
labels <- c("Periodic", "Equilibrium", "Opportunistic")
datatoadd <- data_frame(x=datatoadd[,1], y=datatoadd[,2], z=labels)
# prepare the data for the arrows indentification
rownames(res.pca$rotation) <- c("Amat", "Amax", "M", "K", "Tlvl", "Hab")
select.ind = list(name = dataphylo$Species[which(dataphylo$Species %in% c(#"Gillichthys seta/mirabilis", removed because tm<tmax or Lm<Loo
"Pseudopleuronectes herzensteini",
"Lipophrys pholis",
"Buglossidium luteum",
"Gilchristella aestuaria",
"Chaenocephalus aceratus",
"Glossogobius kokius",
"Brevoortia tyrannus",
"Mugil cephalus",
"Glossogobius giuris"))])
custom_points <- data.frame(res.pca$x)
plotnames <- dataphylo$Species %>% as.character()
mylabels <- sapply(plotnames, function(x) ifelse(dataphylo$Species %in% select.ind, "", x)) %>% as.vector()
p<- fviz_pca_biplot(res.pca,
label = c("var"),
pointshape=19,
arrowsize = 0.25,
geom.ind = "none",
col.var = "darkblue", repel= T
)+
scale_colour_manual(values = mycol, name="MSM cluster \ncentroid")
p <- p + geom_point(data = custom_points[which(dataphylo$Species %in% select.ind$name),],
aes(x = PC1, y = PC2),
size = 3, col=c("darkorchid4", "#4575b4", "#91bfdb", "#fc8d59", "gold", "red", "forestgreen", "pink", "black")) #, "forestgreen", "pink"
p <- p + geom_text_repel(data = custom_points[which(dataphylo$Species %in% select.ind$name),],
aes(x = PC1, y = PC2),
label=rownames(custom_points[which(dataphylo$Species %in% select.ind$name),]))
pdf(file = paste0(path_plots, "/outliers_teleo.pdf"), height = 8, width=6.8)
print(p)
dev.off()
